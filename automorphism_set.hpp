#ifndef __AUTOMORPHISM_SET_HPP__
#define __AUTOMORPHISM_SET_HPP__

#include <vector>
#include "permutation.hpp"

// Automorphism Set
// Represents a set of permutations known to be automorphisms of some graph.

class automorphism_set {
	public:
		automorphism_set();
		automorphism_set(size_t);

		void insert(const permutation&);

		// Returns a sorted list of minimum cell representatives of the orbit partition
		// of the automorphism group generated by this set
		vector<int> mcr() const;
		bool is_mcr(int v) const;

		// Returns a subset of this set stabilizing a point or a sequence
		automorphism_set stabilizer(int sPoint) const;
		automorphism_set stabilizer(const vector<int>& sPoints) const;

		// Information about the number of stored automorphisms
		bool empty() const;
		size_t size() const;

	private:
		size_t n; // Permutation length
		vector< vector<int> > stab; // stab[i] is the list of automorphisms stabilizing i
		vector< permutation > auts; // list of automorphisms

		permutation orbit_permutation; // permutation whose cycles are orbits of the generated group
		vector<int> orbit; // orbit[i] is the cell representative of the cell containing i
};

#endif
